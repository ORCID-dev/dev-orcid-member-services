{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\member\\member.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\member\\member.service.ts","mtime":1666941216157},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\member\\member.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\member\\member.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, share } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IMSMember } from 'app/shared/model/member.model';\nimport {\n  ISFMemberData,\n  ISFRawMemberData,\n  SFMemberData,\n  ISFRawConsortiumMemberData,\n  SFConsortiumMemberData\n} from 'app/shared/model/salesforce-member-data.model';\nimport { ISFRawMemberContact, ISFRawMemberContacts, SFMemberContact } from 'app/shared/model/salesforce-member-contact.model copy';\nimport { ISFRawMemberOrgIds, SFMemberOrgId } from 'app/shared/model/salesforce-member-org-id.model copy';\n\ntype EntityResponseType = HttpResponse<IMSMember>;\ntype EntityArrayResponseType = HttpResponse<IMSMember[]>;\ntype SalesforceDataResponseType = HttpResponse<ISFRawMemberData>;\ntype SalesforceContactsResponseType = HttpResponse<ISFRawMemberContacts>;\ntype SalesforceOrgIdResponseType = HttpResponse<ISFRawMemberOrgIds>;\n\n@Injectable({ providedIn: 'root' })\nexport class MSMemberService {\n  public resourceUrl = SERVER_API_URL + 'services/memberservice/api';\n  public allMembers$: Observable<EntityArrayResponseType>;\n  public orgNameMap: any;\n  public memberData: ISFMemberData;\n\n  constructor(protected http: HttpClient) {\n    this.allMembers$ = this.getAllMembers().pipe(share());\n    this.orgNameMap = new Object();\n  }\n\n  create(msMember: IMSMember): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(msMember);\n    return this.http\n      .post<IMSMember>(`${this.resourceUrl}/members`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(msMember: IMSMember): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(msMember);\n    return this.http\n      .put<IMSMember>(`${this.resourceUrl}/members`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  validate(msMember: IMSMember): Observable<any> {\n    const copy = this.convertDateFromClient(msMember);\n    return this.http\n      .post<IMSMember>(`${this.resourceUrl}/members/validate`, copy, { observe: 'response' })\n      .pipe(map((res: any) => this.convertDateFromServer(res)));\n  }\n\n  find(id: string): Observable<EntityResponseType> {\n    return this.http.get<IMSMember>(`${this.resourceUrl}/members/${id}`, { observe: 'response' }).pipe(\n      map((res: EntityResponseType) => this.convertDateFromServer(res)),\n      catchError(err => {\n        return of(err);\n      })\n    );\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<IMSMember[]>(`${this.resourceUrl}/members`, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  getAllMembers(): Observable<EntityArrayResponseType> {\n    return this.http\n      .get<IMSMember[]>(`${this.resourceUrl}/members/list/all`, { observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  getMember(): Observable<SFMemberData> {\n    return this.http.get<ISFRawMemberData>(`${this.resourceUrl}/member-details`, { observe: 'response' }).pipe(\n      map((res: SalesforceDataResponseType) => this.convertToSalesforceMemberData(res)),\n      catchError(err => {\n        return of(err);\n      })\n    );\n  }\n\n  getMemberContacts(): Observable<SFMemberContact[]> {\n    return this.http.get<ISFRawMemberContacts>(`${this.resourceUrl}/member-contacts`, { observe: 'response' }).pipe(\n      map((res: SalesforceContactsResponseType) => this.convertToSalesforceMemberContacts(res)),\n      catchError(err => {\n        return of(err);\n      })\n    );\n  }\n\n  getMemberOrgIds(): Observable<SFMemberOrgId> {\n    return this.http.get<ISFRawMemberOrgIds>(`${this.resourceUrl}/member-org-ids`, { observe: 'response' }).pipe(\n      map((res: SalesforceOrgIdResponseType) => this.convertToMemberOrgIds(res)),\n      catchError(err => {\n        return of(err);\n      })\n    );\n  }\n\n  delete(id: string): Observable<HttpResponse<any>> {\n    return this.http.delete<any>(`${this.resourceUrl}/members/${id}`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient(msMember: IMSMember): IMSMember {\n    const copy: IMSMember = Object.assign({}, msMember, {\n      createdDate: msMember.createdDate != null && msMember.createdDate.isValid() ? msMember.createdDate.toJSON() : null,\n      lastModifiedDate: msMember.lastModifiedDate != null && msMember.lastModifiedDate.isValid() ? msMember.lastModifiedDate.toJSON() : null\n    });\n    return copy;\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.createdDate = res.body.createdDate != null ? moment(res.body.createdDate) : null;\n      res.body.lastModifiedDate = res.body.lastModifiedDate != null ? moment(res.body.lastModifiedDate) : null;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((msMember: IMSMember) => {\n        msMember.createdDate = msMember.createdDate != null ? moment(msMember.createdDate) : null;\n        msMember.lastModifiedDate = msMember.lastModifiedDate != null ? moment(msMember.lastModifiedDate) : null;\n      });\n    }\n    return res;\n  }\n\n  protected convertToSalesforceMemberData(res: SalesforceDataResponseType): SFMemberData {\n    if (res.body) {\n      return {\n        ...new SFMemberData(),\n        id: res.body.Id,\n        consortiaMember: res.body.Consortia_Member__c,\n        consortiaLeadId: res.body.Consortium_Lead__c,\n        name: res.body.Name,\n        publicDisplayName: res.body.Public_Display_Name__c,\n        website: res.body.Website,\n        billingCountry: res.body.BillingCountry,\n        memberType: res.body.Research_Community__c,\n        publicDisplayDescriptionHtml: res.body.Public_Display_Description__c,\n        logoUrl: res.body.Logo_Description__c,\n        publicDisplayEmail: res.body.Public_Display_Email__c,\n        membershipStartDateString: res.body.Last_membership_start_date__c,\n        membershipEndDateString: res.body.Last_membership_end_date__c,\n        consortiumMembers: res.body.consortiumOpportunities ? this.convertToConsortiumMembers(res.body.consortiumOpportunities) : null\n      };\n    } else {\n      return new SFMemberData();\n    }\n  }\n\n  protected convertToSalesforceMemberContacts(res: SalesforceContactsResponseType): SFMemberContact[] {\n    const contacts: SFMemberContact[] = [];\n    if (res.body && res.body.records.length > 0) {\n      for (const contact of res.body.records) {\n        contacts.push(this.convertToSalesforceMemberContact(contact));\n      }\n      return contacts;\n    } else {\n      return null;\n    }\n  }\n\n  protected convertToSalesforceMemberContact(res: ISFRawMemberContact): SFMemberContact {\n    return {\n      ...new SFMemberContact(),\n      memberId: res.Organization__c,\n      votingContact: res.Voting_Contact__c,\n      name: res.Name,\n      memberOrgRole: res.Member_Org_Role__c,\n      contactEmail: res.Contact_Curr_Email__c\n    };\n  }\n\n  protected convertToMemberOrgIds(res: SalesforceOrgIdResponseType): SFMemberOrgId {\n    if (res.body && res.body.records.length > 0) {\n      const ids = res.body.records;\n      const ROR = [],\n        GRID = [],\n        Ringgold = [],\n        Fundref = [];\n      for (var i = 0; i < ids.length; i++) {\n        if (ids[i].Identifier_Type__c === 'ROR') {\n          ROR.push(ids[i].Name);\n        }\n        if (ids[i].Identifier_Type__c === 'GRID') {\n          GRID.push(ids[i].Name);\n        }\n        if (ids[i].Identifier_Type__c === 'Ringgold ID') {\n          Ringgold.push(ids[i].Name);\n        }\n        if (ids[i].Identifier_Type__c === 'FundRef ID') {\n          Fundref.push(ids[i].Name);\n        }\n      }\n      return {\n        ...new SFMemberOrgId(),\n        ROR,\n        GRID,\n        Ringgold,\n        Fundref\n      };\n    } else {\n      return null;\n    }\n  }\n\n  protected convertToConsortiumMembers(consortiumOpportunities: ISFRawConsortiumMemberData[]): SFConsortiumMemberData[] {\n    let consortiumMembers: SFConsortiumMemberData[] = [];\n    for (const consortiumOpportunity of consortiumOpportunities) {\n      consortiumMembers.push(this.convertToConsortiumMember(consortiumOpportunity));\n    }\n    return consortiumMembers;\n  }\n\n  protected convertToConsortiumMember(consortiumOpportunity: ISFRawConsortiumMemberData): SFConsortiumMemberData {\n    const consortiumMember: SFConsortiumMemberData = new SFConsortiumMemberData();\n    consortiumMember.name = consortiumOpportunity.Account.Public_Display_Name__c;\n    consortiumMember.salesforceId = consortiumOpportunity.AccountId;\n    return consortiumMember;\n  }\n}\n"]}]}
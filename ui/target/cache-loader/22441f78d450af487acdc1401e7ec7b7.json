{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","mtime":1663837715827},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hLCBfYjsNCmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoIkBhbmd1bGFyL2NvcmUiKTsNCmNvbnN0IG5nX2Jvb3RzdHJhcF8xID0gcmVxdWlyZSgiQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAiKTsNCmNvbnN0IG1ldHJpY3Nfc2VydmljZV8xID0gcmVxdWlyZSgiLi9tZXRyaWNzLnNlcnZpY2UiKTsNCmxldCBKaGlNZXRyaWNzTW9uaXRvcmluZ0NvbXBvbmVudCA9IGNsYXNzIEpoaU1ldHJpY3NNb25pdG9yaW5nQ29tcG9uZW50IHsNCiAgICBjb25zdHJ1Y3Rvcihtb2RhbFNlcnZpY2UsIG1ldHJpY3NTZXJ2aWNlKSB7DQogICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlID0gbW9kYWxTZXJ2aWNlOw0KICAgICAgICB0aGlzLm1ldHJpY3NTZXJ2aWNlID0gbWV0cmljc1NlcnZpY2U7DQogICAgICAgIHRoaXMubWV0cmljcyA9IHt9Ow0KICAgICAgICB0aGlzLnRocmVhZERhdGEgPSB7fTsNCiAgICAgICAgdGhpcy51cGRhdGluZ01ldHJpY3MgPSB0cnVlOw0KICAgICAgICB0aGlzLkpDQUNIRV9LRVkgPSAnamNhY2hlLnN0YXRpc3RpY3MnOw0KICAgIH0NCiAgICBuZ09uSW5pdCgpIHsNCiAgICAgICAgdGhpcy5yZWZyZXNoKCk7DQogICAgfQ0KICAgIHJlZnJlc2goKSB7DQogICAgICAgIHRoaXMudXBkYXRpbmdNZXRyaWNzID0gdHJ1ZTsNCiAgICAgICAgdGhpcy5tZXRyaWNzU2VydmljZS5nZXRNZXRyaWNzKCkuc3Vic2NyaWJlKG1ldHJpY3MgPT4gew0KICAgICAgICAgICAgdGhpcy5tZXRyaWNzID0gbWV0cmljczsNCiAgICAgICAgICAgIHRoaXMubWV0cmljc1NlcnZpY2UudGhyZWFkRHVtcCgpLnN1YnNjcmliZShkYXRhID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLnRocmVhZERhdGEgPSBkYXRhLnRocmVhZHM7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGluZ01ldHJpY3MgPSBmYWxzZTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9KTsNCiAgICB9DQogICAgaXNPYmplY3RFeGlzdGluZyhtZXRyaWNzLCBrZXkpIHsNCiAgICAgICAgcmV0dXJuIG1ldHJpY3MgJiYgbWV0cmljc1trZXldOw0KICAgIH0NCiAgICBpc09iamVjdEV4aXN0aW5nQW5kTm90RW1wdHkobWV0cmljcywga2V5KSB7DQogICAgICAgIHJldHVybiB0aGlzLmlzT2JqZWN0RXhpc3RpbmcobWV0cmljcywga2V5KSAmJiBKU09OLnN0cmluZ2lmeShtZXRyaWNzW2tleV0pICE9PSAne30nOw0KICAgIH0NCn07DQpKaGlNZXRyaWNzTW9uaXRvcmluZ0NvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgY29yZV8xLkNvbXBvbmVudCh7DQogICAgICAgIHNlbGVjdG9yOiAnamhpLW1ldHJpY3MnLA0KICAgICAgICB0ZW1wbGF0ZVVybDogJy4vbWV0cmljcy5jb21wb25lbnQuaHRtbCcNCiAgICB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgbmdfYm9vdHN0cmFwXzEuTmdiTW9kYWwgIT09ICJ1bmRlZmluZWQiICYmIG5nX2Jvb3RzdHJhcF8xLk5nYk1vZGFsKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIG1ldHJpY3Nfc2VydmljZV8xLkpoaU1ldHJpY3NTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBtZXRyaWNzX3NlcnZpY2VfMS5KaGlNZXRyaWNzU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdF0pDQpdLCBKaGlNZXRyaWNzTW9uaXRvcmluZ0NvbXBvbmVudCk7DQpleHBvcnRzLkpoaU1ldHJpY3NNb25pdG9yaW5nQ29tcG9uZW50ID0gSmhpTWV0cmljc01vbml0b3JpbmdDb21wb25lbnQ7DQo="},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAkD;AAClD,6DAAsD;AAEtD,uDAAsD;AAMtD,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAMxC,YAAoB,YAAsB,EAAU,cAAiC;QAAjE,iBAAY,GAAZ,YAAY,CAAU;QAAU,mBAAc,GAAd,cAAc,CAAmB;QALrF,YAAO,GAAQ,EAAE,CAAC;QAClB,eAAU,GAAQ,EAAE,CAAC;QACrB,oBAAe,GAAG,IAAI,CAAC;QAIrB,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,OAAY,EAAE,GAAW;QACxC,OAAO,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,2BAA2B,CAAC,OAAY,EAAE,GAAW;QACnD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACtF,CAAC;CACF,CAAA;AAhCY,6BAA6B;IAJzC,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,0BAA0B;KACxC,CAAC;iEAOkC,uBAAQ,oBAAR,uBAAQ,oDAA0B,mCAAiB,oBAAjB,mCAAiB;GAN1E,6BAA6B,CAgCzC;AAhCY,sEAA6B","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { JhiMetricsService } from './metrics.service';\r\n\r\n@Component({\r\n  selector: 'jhi-metrics',\r\n  templateUrl: './metrics.component.html'\r\n})\r\nexport class JhiMetricsMonitoringComponent implements OnInit {\r\n  metrics: any = {};\r\n  threadData: any = {};\r\n  updatingMetrics = true;\r\n  JCACHE_KEY: string;\r\n\r\n  constructor(private modalService: NgbModal, private metricsService: JhiMetricsService) {\r\n    this.JCACHE_KEY = 'jcache.statistics';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n    this.updatingMetrics = true;\r\n    this.metricsService.getMetrics().subscribe(metrics => {\r\n      this.metrics = metrics;\r\n      this.metricsService.threadDump().subscribe(data => {\r\n        this.threadData = data.threads;\r\n        this.updatingMetrics = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  isObjectExisting(metrics: any, key: string) {\r\n    return metrics && metrics[key];\r\n  }\r\n\r\n  isObjectExistingAndNotEmpty(metrics: any, key: string) {\r\n    return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\r\n  }\r\n}\r\n"]}]}
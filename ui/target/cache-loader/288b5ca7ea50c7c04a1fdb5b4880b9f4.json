{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\account.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\account.service.ts","mtime":1666941216061},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\account.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\nimport { IMSUser } from 'app/shared/model/user.model';\nimport { MSMemberService } from 'app/entities/member/member.service';\nimport { ISFMemberData } from 'app/shared/model/salesforce-member-data.model';\nimport { SFMemberContact } from 'app/shared/model/salesforce-member-contact.model copy';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: any;\n  private memberData: BehaviorSubject<ISFMemberData> = new BehaviorSubject<ISFMemberData>(null);\n  private authenticated = false;\n  private authenticationState = new Subject<any>();\n  private logoutAsResourceUrl = SERVER_API_URL + 'services/userservice/api';\n\n  constructor(\n    private languageService: JhiLanguageService,\n    private sessionStorage: SessionStorageService,\n    private http: HttpClient,\n    private memberService: MSMemberService\n  ) {}\n\n  fetch(): Observable<HttpResponse<Account>> {\n    return this.http.get<Account>(SERVER_API_URL + 'services/userservice/api/account', { observe: 'response' });\n  }\n\n  getMfaSetup(): Observable<HttpResponse<any>> {\n    return this.http.get<any>(SERVER_API_URL + 'services/userservice/api/account/mfa', { observe: 'response' });\n  }\n\n  save(account: any): Observable<HttpResponse<any>> {\n    return this.http.post(SERVER_API_URL + 'services/userservice/api/account', account, { observe: 'response' });\n  }\n\n  enableMfa(mfaSetup: any): Observable<HttpResponse<any>> {\n    return this.http.post(SERVER_API_URL + 'services/userservice/api/account/mfa/on', mfaSetup, { observe: 'response' });\n  }\n\n  disableMfa(): Observable<HttpResponse<any>> {\n    return this.http.post(SERVER_API_URL + 'services/userservice/api/account/mfa/off', null, { observe: 'response' });\n  }\n\n  authenticate(identity) {\n    this.userIdentity = identity;\n    this.authenticated = identity !== null;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[]): boolean {\n    if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n\n    for (let i = 0; i < authorities.length; i++) {\n      if (this.userIdentity.authorities.includes(authorities[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  hasAuthority(authority: string): Promise<boolean> {\n    if (!this.authenticated) {\n      return Promise.resolve(false);\n    }\n\n    return this.identity().then(\n      id => {\n        return Promise.resolve(id.authorities && id.authorities.includes(authority));\n      },\n      () => {\n        return Promise.resolve(false);\n      }\n    );\n  }\n\n  identity(force?: boolean): Promise<IMSUser> {\n    if (force) {\n      this.userIdentity = undefined;\n      this.memberData.next(null);\n    }\n\n    // check and see if we have retrieved the userIdentity data from the server.\n    // if we have, reuse it by immediately resolving\n    if (this.userIdentity) {\n      return Promise.resolve(this.userIdentity);\n    }\n\n    // retrieve the userIdentity data from the server, update the identity object, and then resolve.\n    return this.fetch()\n      .toPromise()\n      .then(response => {\n        const account: Account = response.body;\n        if (account) {\n          this.userIdentity = account;\n          this.authenticated = true;\n          // After retrieve the account info, the language will be changed to\n          // the user's preferred language configured in the account setting\n          if (this.userIdentity.langKey) {\n            const langKey = this.sessionStorage.retrieve('locale') || this.userIdentity.langKey;\n            this.languageService.changeLanguage(langKey);\n          }\n        } else {\n          this.memberData.next(null);\n          this.userIdentity = null;\n          this.authenticated = false;\n        }\n        this.authenticationState.next(this.userIdentity);\n        return this.userIdentity;\n      })\n      .catch(err => {\n        this.userIdentity = null;\n        this.memberData.next(null);\n        this.authenticated = false;\n        this.authenticationState.next(this.userIdentity);\n        return null;\n      });\n  }\n\n  isAuthenticated(): boolean {\n    return this.authenticated;\n  }\n\n  isIdentityResolved(): boolean {\n    return this.userIdentity !== undefined;\n  }\n\n  getAuthenticationState(): Observable<any> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n  }\n\n  getUserName(): string {\n    let userName: string;\n\n    if (this.isIdentityResolved()) {\n      if (this.userIdentity.firstName) {\n        userName = this.userIdentity.firstName;\n      }\n      if (this.userIdentity.lastName) {\n        if (userName) {\n          userName = userName + ' ' + this.userIdentity.lastName;\n        } else {\n          userName = this.userIdentity.lastName;\n        }\n      }\n      if (userName == null) {\n        userName = this.userIdentity.email;\n      }\n    }\n    return userName;\n  }\n\n  getSalesforceId(): string {\n    return this.isAuthenticated() && this.userIdentity ? this.userIdentity.salesforceId : null;\n  }\n\n  async getCurrentMemberData(): Promise<BehaviorSubject<ISFMemberData>> {\n    if (this.memberData.value === null && this.userIdentity) {\n      console.log('getCurrentMemberData(): running', new Date().toLocaleString());\n      await this.memberService\n        .getMember()\n        .toPromise()\n        .then(res => {\n          console.log('getCurrentMemberData(): done', new Date().toLocaleString());\n          if (res) {\n            this.memberData.next(res);\n            this.memberService\n              .getMemberContacts()\n              .toPromise()\n              .then(res => {\n                if (res) {\n                  this.memberData.value.contacts = res;\n                }\n              });\n            this.memberService\n              .getMemberOrgIds()\n              .toPromise()\n              .then(res => {\n                if (res) {\n                  this.memberData.value.orgIds = res;\n                }\n              });\n            if (res && res.consortiaLeadId) {\n              this.memberService\n                .find(res.consortiaLeadId)\n                .toPromise()\n                .then(r => {\n                  if (r && r.body) {\n                    this.memberData.value.consortiumLeadName = r.body.clientName;\n                  }\n                });\n            }\n            if (this.userIdentity.salesforceId) {\n              this.memberService\n                .find(this.userIdentity.salesforceId)\n                .toPromise()\n                .then(r => {\n                  if (r && r.body) {\n                    this.memberData.value.isConsortiumLead = r.body.isConsortiumLead;\n                  }\n                });\n            }\n          }\n        });\n    }\n    return this.memberData;\n  }\n\n  isOrganizationOwner(): string {\n    return this.isIdentityResolved() && this.userIdentity ? this.userIdentity.mainContact : false;\n  }\n\n  isLoggedAs(): boolean {\n    return !!(this.isIdentityResolved() && this.userIdentity && this.userIdentity.loggedAs);\n  }\n\n  logoutAs(): Observable<any> {\n    const formData = new FormData();\n    formData.set('username', this.userIdentity.loginAs);\n    return this.http.post(`${this.logoutAsResourceUrl}/logout_as`, formData, {\n      headers: new HttpHeaders().set('Accept', 'text/html'),\n      withCredentials: true,\n      responseType: 'text'\n    });\n  }\n}\n"]}]}
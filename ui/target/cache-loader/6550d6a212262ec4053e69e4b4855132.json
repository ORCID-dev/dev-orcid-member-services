{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts","mtime":1663837715767},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hOw0KY29uc3QgY29yZV8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29yZSIpOw0KY29uc3QgaHR0cF8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29tbW9uL2h0dHAiKTsNCmNvbnN0IHNoYXJlZF8xID0gcmVxdWlyZSgiYXBwL3NoYXJlZCIpOw0KY29uc3QgYXBwX2NvbnN0YW50c18xID0gcmVxdWlyZSgiYXBwL2FwcC5jb25zdGFudHMiKTsNCmxldCBBdWRpdHNTZXJ2aWNlID0gY2xhc3MgQXVkaXRzU2VydmljZSB7DQogICAgY29uc3RydWN0b3IoaHR0cCkgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgIH0NCiAgICBxdWVyeShyZXEpIHsNCiAgICAgICAgY29uc3QgcGFyYW1zID0gc2hhcmVkXzEuY3JlYXRlUmVxdWVzdE9wdGlvbihyZXEpOw0KICAgICAgICBwYXJhbXMuc2V0KCdmcm9tRGF0ZScsIHJlcS5mcm9tRGF0ZSk7DQogICAgICAgIHBhcmFtcy5zZXQoJ3RvRGF0ZScsIHJlcS50b0RhdGUpOw0KICAgICAgICBjb25zdCByZXF1ZXN0VVJMID0gYXBwX2NvbnN0YW50c18xLlNFUlZFUl9BUElfVVJMICsgJ3NlcnZpY2VzL3VzZXJzZXJ2aWNlL21hbmFnZW1lbnQvYXVkaXRzJzsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQocmVxdWVzdFVSTCwgew0KICAgICAgICAgICAgcGFyYW1zLA0KICAgICAgICAgICAgb2JzZXJ2ZTogJ3Jlc3BvbnNlJw0KICAgICAgICB9KTsNCiAgICB9DQp9Ow0KQXVkaXRzU2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgY29yZV8xLkluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksDQogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIGh0dHBfMS5IdHRwQ2xpZW50ICE9PSAidW5kZWZpbmVkIiAmJiBodHRwXzEuSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pDQpdLCBBdWRpdHNTZXJ2aWNlKTsNCmV4cG9ydHMuQXVkaXRzU2VydmljZSA9IEF1ZGl0c1NlcnZpY2U7DQo="},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAA4E;AAG5E,uCAAiD;AACjD,qDAAmD;AAInD,IAAa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,KAAK,CAAC,GAAQ;QACZ,MAAM,MAAM,GAAe,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAEjC,MAAM,UAAU,GAAG,8BAAc,GAAG,wCAAwC,CAAC;QAE7E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,UAAU,EAAE;YACxC,MAAM;YACN,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAfY,aAAa;IADzB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEP,iBAAU,oBAAV,iBAAU;GADzB,aAAa,CAezB;AAfY,sCAAa","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { createRequestOption } from 'app/shared';\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { Audit } from './audit.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuditsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  query(req: any): Observable<HttpResponse<Audit[]>> {\r\n    const params: HttpParams = createRequestOption(req);\r\n    params.set('fromDate', req.fromDate);\r\n    params.set('toDate', req.toDate);\r\n\r\n    const requestURL = SERVER_API_URL + 'services/userservice/management/audits';\r\n\r\n    return this.http.get<Audit[]>(requestURL, {\r\n      params,\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n"]}]}
{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\landing-page\\landing-page.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\landing-page\\landing-page.service.ts","mtime":1663837716077},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hOw0KY29uc3QgY29yZV8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29yZSIpOw0KY29uc3QgaHR0cF8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29tbW9uL2h0dHAiKTsNCmNvbnN0IGFwcF9jb25zdGFudHNfMSA9IHJlcXVpcmUoImFwcC9hcHAuY29uc3RhbnRzIik7DQpsZXQgTGFuZGluZ1BhZ2VTZXJ2aWNlID0gY2xhc3MgTGFuZGluZ1BhZ2VTZXJ2aWNlIHsNCiAgICBjb25zdHJ1Y3RvcihodHRwKSB7DQogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7DQogICAgICAgIHRoaXMuaWRUb2tlblVyaSA9IGFwcF9jb25zdGFudHNfMS5TRVJWRVJfQVBJX1VSTCArICdzZXJ2aWNlcy9hc3NlcnRpb25zZXJ2aWNlL2FwaS9pZC10b2tlbic7DQogICAgICAgIHRoaXMucmVjb3JkQ29ubmVjdGlvblVyaSA9IGFwcF9jb25zdGFudHNfMS5TRVJWRVJfQVBJX1VSTCArICdzZXJ2aWNlcy9hc3NlcnRpb25zZXJ2aWNlL2FwaS9hc3NlcnRpb24vcmVjb3JkLyc7DQogICAgICAgIHRoaXMubWVtYmVySW5mb1VyaSA9IGFwcF9jb25zdGFudHNfMS5TRVJWRVJfQVBJX1VSTCArICdzZXJ2aWNlcy9tZW1iZXJzZXJ2aWNlL2FwaS9tZW1iZXJzL2F1dGhvcml6ZWQvJzsNCiAgICAgICAgdGhpcy51c2VySW5mb1VyaSA9IGFwcF9jb25zdGFudHNfMS5PUkNJRF9CQVNFX1VSTCArICcvb2F1dGgvdXNlcmluZm8nOw0KICAgICAgICB0aGlzLnB1YmxpY0tleVVyaSA9IGFwcF9jb25zdGFudHNfMS5PUkNJRF9CQVNFX1VSTCArICcvb2F1dGgvandrcyc7DQogICAgICAgIHRoaXMuaGVhZGVycyA9IG5ldyBodHRwXzEuSHR0cEhlYWRlcnMoew0KICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJywNCiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicNCiAgICAgICAgfSk7DQogICAgfQ0KICAgIHN1Ym1pdFVzZXJSZXNwb25zZShkYXRhKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCh0aGlzLmlkVG9rZW5VcmksIEpTT04uc3RyaW5naWZ5KGRhdGEpLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTsNCiAgICB9DQogICAgZ2V0T3JjaWRDb25uZWN0aW9uUmVjb3JkKHN0YXRlKSB7DQogICAgICAgIGNvbnN0IHJlcXVlc3RVcmwgPSB0aGlzLnJlY29yZENvbm5lY3Rpb25VcmkgKyBzdGF0ZTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQocmVxdWVzdFVybCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBnZXRNZW1iZXJJbmZvKHN0YXRlKSB7DQogICAgICAgIGNvbnN0IHJlcXVlc3RVcmwgPSB0aGlzLm1lbWJlckluZm9VcmkgKyBzdGF0ZTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQocmVxdWVzdFVybCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBnZXRVc2VySW5mbyhhY2Nlc3NfdG9rZW4pIHsNCiAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBodHRwXzEuSHR0cEhlYWRlcnMoew0KICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgYWNjZXNzX3Rva2VuLA0KICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJw0KICAgICAgICB9KTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KHRoaXMudXNlckluZm9VcmksIHt9LCB7IGhlYWRlcnMgfSk7DQogICAgfQ0KICAgIGdldFB1YmxpY0tleSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5wdWJsaWNLZXlVcmkpOw0KICAgIH0NCn07DQpMYW5kaW5nUGFnZVNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWw0KICAgIGNvcmVfMS5JbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLA0KICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBodHRwXzEuSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgaHR0cF8xLkh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQ0KXSwgTGFuZGluZ1BhZ2VTZXJ2aWNlKTsNCmV4cG9ydHMuTGFuZGluZ1BhZ2VTZXJ2aWNlID0gTGFuZGluZ1BhZ2VTZXJ2aWNlOw0K"},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\landing-page\\landing-page.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\landing-page\\landing-page.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAAiF;AAEjF,qDAAmE;AAGnE,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAS7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANpC,eAAU,GAAW,8BAAc,GAAG,wCAAwC,CAAC;QAC/E,wBAAmB,GAAW,8BAAc,GAAG,iDAAiD,CAAC;QACjG,kBAAa,GAAW,8BAAc,GAAG,gDAAgD,CAAC;QAC1F,gBAAW,GAAW,8BAAc,GAAG,iBAAiB,CAAC;QACzD,iBAAY,GAAW,8BAAc,GAAG,aAAa,CAAC;QAGpD,IAAI,CAAC,OAAO,GAAG,IAAI,kBAAW,CAAC;YAC7B,6BAA6B,EAAE,GAAG;YAClC,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,IAAI;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,wBAAwB,CAAC,KAAa;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW,CAAC,YAAoB;QAC9B,MAAM,OAAO,GAAG,IAAI,kBAAW,CAAC;YAC9B,aAAa,EAAE,SAAS,GAAG,YAAY;YACvC,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;CACF,CAAA;AAzCY,kBAAkB;IAD9B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAUP,iBAAU,oBAAV,iBAAU;GATzB,kBAAkB,CAyC9B;AAzCY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SERVER_API_URL, ORCID_BASE_URL } from 'app/app.constants';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LandingPageService {\r\n  private headers: HttpHeaders;\r\n\r\n  idTokenUri: string = SERVER_API_URL + 'services/assertionservice/api/id-token';\r\n  recordConnectionUri: string = SERVER_API_URL + 'services/assertionservice/api/assertion/record/';\r\n  memberInfoUri: string = SERVER_API_URL + 'services/memberservice/api/members/authorized/';\r\n  userInfoUri: string = ORCID_BASE_URL + '/oauth/userinfo';\r\n  publicKeyUri: string = ORCID_BASE_URL + '/oauth/jwks';\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.headers = new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json'\r\n    });\r\n  }\r\n\r\n  submitUserResponse(data): Observable<any> {\r\n    return this.http.post(this.idTokenUri, JSON.stringify(data), { headers: this.headers });\r\n  }\r\n\r\n  getOrcidConnectionRecord(state: String): Observable<any> {\r\n    const requestUrl = this.recordConnectionUri + state;\r\n    return this.http.get(requestUrl, { observe: 'response' });\r\n  }\r\n\r\n  getMemberInfo(state: String): Observable<any> {\r\n    const requestUrl = this.memberInfoUri + state;\r\n    return this.http.get(requestUrl, { observe: 'response' });\r\n  }\r\n\r\n  getUserInfo(access_token: String): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      Authorization: 'Bearer ' + access_token,\r\n      'Content-Type': 'application/json'\r\n    });\r\n    return this.http.post(this.userInfoUri, {}, { headers });\r\n  }\r\n\r\n  getPublicKey(): Observable<any> {\r\n    return this.http.get(this.publicKeyUri);\r\n  }\r\n}\r\n"]}]}
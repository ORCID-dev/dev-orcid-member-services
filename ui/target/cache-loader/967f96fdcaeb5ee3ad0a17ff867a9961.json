{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\AssertionService\\assertion\\assertion.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\AssertionService\\assertion\\assertion.service.ts","mtime":1652191653713},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hLCBfYjsNCmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoIkBhbmd1bGFyL2NvcmUiKTsNCmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoIkBhbmd1bGFyL2NvbW1vbi9odHRwIik7DQpjb25zdCBtb21lbnQgPSByZXF1aXJlKCJtb21lbnQiKTsNCmNvbnN0IG9wZXJhdG9yc18xID0gcmVxdWlyZSgicnhqcy9vcGVyYXRvcnMiKTsNCmNvbnN0IGFwcF9jb25zdGFudHNfMSA9IHJlcXVpcmUoImFwcC9hcHAuY29uc3RhbnRzIik7DQpjb25zdCBzaGFyZWRfMSA9IHJlcXVpcmUoImFwcC9zaGFyZWQiKTsNCmNvbnN0IGVycm9yX2hhbmRsZXJfc2VydmljZV8xID0gcmVxdWlyZSgiYXBwL3NoYXJlZC9lcnJvckhhbmRsZXIvZXJyb3ItaGFuZGxlci5zZXJ2aWNlIik7DQpsZXQgQXNzZXJ0aW9uU2VydmljZSA9IGNsYXNzIEFzc2VydGlvblNlcnZpY2Ugew0KICAgIGNvbnN0cnVjdG9yKGh0dHAsIGVycm9ySGFuZGxlcikgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgICAgICB0aGlzLmVycm9ySGFuZGxlciA9IGVycm9ySGFuZGxlcjsNCiAgICAgICAgdGhpcy5yZXNvdXJjZVVybCA9IGFwcF9jb25zdGFudHNfMS5TRVJWRVJfQVBJX1VSTCArICdzZXJ2aWNlcy9hc3NlcnRpb25zZXJ2aWNlL2FwaS9hc3NlcnRpb24nOw0KICAgIH0NCiAgICBjcmVhdGUoYXNzZXJ0aW9uKSB7DQogICAgICAgIGNvbnN0IGNvcHkgPSB0aGlzLmNvbnZlcnREYXRlRnJvbUNsaWVudChhc3NlcnRpb24pOw0KICAgICAgICByZXR1cm4gdGhpcy5odHRwDQogICAgICAgICAgICAucG9zdCh0aGlzLnJlc291cmNlVXJsLCBjb3B5LCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgIC5waXBlKG9wZXJhdG9yc18xLm1hcCgocmVzKSA9PiB0aGlzLmNvbnZlcnREYXRlRnJvbVNlcnZlcihyZXMpKSk7DQogICAgfQ0KICAgIHVwbG9hZChhc3NlcnRpb24pIHsNCiAgICAgICAgY29uc3QgY29weSA9IHRoaXMuY29udmVydERhdGVGcm9tQ2xpZW50KGFzc2VydGlvbik7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHANCiAgICAgICAgICAgIC5wb3N0KHRoaXMucmVzb3VyY2VVcmwsIGNvcHksIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KQ0KICAgICAgICAgICAgLnBpcGUob3BlcmF0b3JzXzEubWFwKChyZXMpID0+IHRoaXMuY29udmVydERhdGVGcm9tU2VydmVyKHJlcykpKTsNCiAgICB9DQogICAgdXBkYXRlKGFzc2VydGlvbikgew0KICAgICAgICBjb25zdCBjb3B5ID0gdGhpcy5jb252ZXJ0RGF0ZUZyb21DbGllbnQoYXNzZXJ0aW9uKTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cA0KICAgICAgICAgICAgLnB1dCh0aGlzLnJlc291cmNlVXJsLCBjb3B5LCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgIC5waXBlKG9wZXJhdG9yc18xLm1hcCgocmVzKSA9PiB0aGlzLmNvbnZlcnREYXRlRnJvbVNlcnZlcihyZXMpKSk7DQogICAgfQ0KICAgIGZpbmQoaWQpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cA0KICAgICAgICAgICAgLmdldChgJHt0aGlzLnJlc291cmNlVXJsfS8ke2lkfWAsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KQ0KICAgICAgICAgICAgLnBpcGUob3BlcmF0b3JzXzEubWFwKChyZXMpID0+IHRoaXMuY29udmVydERhdGVGcm9tU2VydmVyKHJlcykpKTsNCiAgICB9DQogICAgcXVlcnkocmVxKSB7DQogICAgICAgIGNvbnN0IG9wdGlvbnMgPSBzaGFyZWRfMS5jcmVhdGVSZXF1ZXN0T3B0aW9uKHJlcSk7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHANCiAgICAgICAgICAgIC5nZXQodGhpcy5yZXNvdXJjZVVybCArICdzJywgeyBwYXJhbXM6IG9wdGlvbnMsIG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgIC5waXBlKG9wZXJhdG9yc18xLm1hcCgocmVzKSA9PiB0aGlzLmNvbnZlcnREYXRlQXJyYXlGcm9tU2VydmVyKHJlcykpKTsNCiAgICB9DQogICAgZGVsZXRlKGlkKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlKGAke3RoaXMucmVzb3VyY2VVcmx9LyR7aWR9YCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBkZWxldGVGcm9tT3JjaWQoaWQpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGUoYCR7dGhpcy5yZXNvdXJjZVVybH0vb3JjaWQvJHtpZH1gLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7DQogICAgfQ0KICAgIGdlbmVyYXRlUGVybWlzc2lvbkxpbmtzKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoYCR7dGhpcy5yZXNvdXJjZVVybH0vcGVybWlzc2lvbi1saW5rc2AsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTsNCiAgICB9DQogICAgZ2VuZXJhdGVDU1YoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdChgJHt0aGlzLnJlc291cmNlVXJsfS9jc3ZgLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7DQogICAgfQ0KICAgIGdlbmVyYXRlUmVwb3J0KCkgew0KICAgICAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoYCR7dGhpcy5yZXNvdXJjZVVybH0vcmVwb3J0YCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBjb252ZXJ0RGF0ZUZyb21DbGllbnQoYXNzZXJ0aW9uKSB7DQogICAgICAgIGNvbnN0IGNvcHkgPSBPYmplY3QuYXNzaWduKHt9LCBhc3NlcnRpb24sIHsNCiAgICAgICAgICAgIGNyZWF0ZWQ6IGFzc2VydGlvbi5jcmVhdGVkICE9IG51bGwgJiYgYXNzZXJ0aW9uLmNyZWF0ZWQuaXNWYWxpZCgpID8gYXNzZXJ0aW9uLmNyZWF0ZWQudG9KU09OKCkgOiBudWxsLA0KICAgICAgICAgICAgbW9kaWZpZWQ6IGFzc2VydGlvbi5tb2RpZmllZCAhPSBudWxsICYmIGFzc2VydGlvbi5tb2RpZmllZC5pc1ZhbGlkKCkgPyBhc3NlcnRpb24ubW9kaWZpZWQudG9KU09OKCkgOiBudWxsLA0KICAgICAgICAgICAgZGVsZXRlZEZyb21PUkNJRDogYXNzZXJ0aW9uLmRlbGV0ZWRGcm9tT1JDSUQgIT0gbnVsbCAmJiBhc3NlcnRpb24uZGVsZXRlZEZyb21PUkNJRC5pc1ZhbGlkKCkgPyBhc3NlcnRpb24uZGVsZXRlZEZyb21PUkNJRC50b0pTT04oKSA6IG51bGwNCiAgICAgICAgfSk7DQogICAgICAgIHJldHVybiBjb3B5Ow0KICAgIH0NCiAgICBjb252ZXJ0RGF0ZUZyb21TZXJ2ZXIocmVzKSB7DQogICAgICAgIGlmIChyZXMuYm9keSkgew0KICAgICAgICAgICAgcmVzLmJvZHkuY3JlYXRlZCA9IHJlcy5ib2R5LmNyZWF0ZWQgIT0gbnVsbCA/IG1vbWVudChyZXMuYm9keS5jcmVhdGVkKSA6IG51bGw7DQogICAgICAgICAgICByZXMuYm9keS5tb2RpZmllZCA9IHJlcy5ib2R5Lm1vZGlmaWVkICE9IG51bGwgPyBtb21lbnQocmVzLmJvZHkubW9kaWZpZWQpIDogbnVsbDsNCiAgICAgICAgICAgIHJlcy5ib2R5LmFkZGVkVG9PUkNJRCA9IHJlcy5ib2R5LmFkZGVkVG9PUkNJRCAhPSBudWxsID8gbW9tZW50KHJlcy5ib2R5LmFkZGVkVG9PUkNJRCkgOiBudWxsOw0KICAgICAgICAgICAgcmVzLmJvZHkuZGVsZXRlZEZyb21PUkNJRCA9IHJlcy5ib2R5LmRlbGV0ZWRGcm9tT1JDSUQgIT0gbnVsbCA/IG1vbWVudChyZXMuYm9keS5kZWxldGVkRnJvbU9SQ0lEKSA6IG51bGw7DQogICAgICAgICAgICByZXMuYm9keS51cGRhdGVkSW5PUkNJRCA9IHJlcy5ib2R5LnVwZGF0ZWRJbk9SQ0lEICE9IG51bGwgPyBtb21lbnQocmVzLmJvZHkudXBkYXRlZEluT1JDSUQpIDogbnVsbDsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzOw0KICAgIH0NCiAgICBjb252ZXJ0RGF0ZUFycmF5RnJvbVNlcnZlcihyZXMpIHsNCiAgICAgICAgaWYgKHJlcy5ib2R5KSB7DQogICAgICAgICAgICByZXMuYm9keS5mb3JFYWNoKChhc3NlcnRpb24pID0+IHsNCiAgICAgICAgICAgICAgICBhc3NlcnRpb24uY3JlYXRlZCA9IGFzc2VydGlvbi5jcmVhdGVkICE9IG51bGwgPyBtb21lbnQoYXNzZXJ0aW9uLmNyZWF0ZWQpIDogbnVsbDsNCiAgICAgICAgICAgICAgICBhc3NlcnRpb24ubW9kaWZpZWQgPSBhc3NlcnRpb24ubW9kaWZpZWQgIT0gbnVsbCA/IG1vbWVudChhc3NlcnRpb24ubW9kaWZpZWQpIDogbnVsbDsNCiAgICAgICAgICAgICAgICBhc3NlcnRpb24uZGVsZXRlZEZyb21PUkNJRCA9IGFzc2VydGlvbi5kZWxldGVkRnJvbU9SQ0lEICE9IG51bGwgPyBtb21lbnQoYXNzZXJ0aW9uLmRlbGV0ZWRGcm9tT1JDSUQpIDogbnVsbDsNCiAgICAgICAgICAgICAgICBhc3NlcnRpb24uYWRkZWRUb09SQ0lEID0gYXNzZXJ0aW9uLmFkZGVkVG9PUkNJRCAhPSBudWxsID8gbW9tZW50KGFzc2VydGlvbi5hZGRlZFRvT1JDSUQpIDogbnVsbDsNCiAgICAgICAgICAgICAgICBhc3NlcnRpb24udXBkYXRlZEluT1JDSUQgPSBhc3NlcnRpb24udXBkYXRlZEluT1JDSUQgIT0gbnVsbCA/IG1vbWVudChhc3NlcnRpb24udXBkYXRlZEluT1JDSUQpIDogbnVsbDsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiByZXM7DQogICAgfQ0KfTsNCkFzc2VydGlvblNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWw0KICAgIGNvcmVfMS5JbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLA0KICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBodHRwXzEuSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgaHR0cF8xLkh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3QsIHR5cGVvZiAoX2IgPSB0eXBlb2YgZXJyb3JfaGFuZGxlcl9zZXJ2aWNlXzEuRXJyb3JIYW5kbGVyU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgZXJyb3JfaGFuZGxlcl9zZXJ2aWNlXzEuRXJyb3JIYW5kbGVyU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdF0pDQpdLCBBc3NlcnRpb25TZXJ2aWNlKTsNCmV4cG9ydHMuQXNzZXJ0aW9uU2VydmljZSA9IEFzc2VydGlvblNlcnZpY2U7DQo="},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\AssertionService\\assertion\\assertion.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\AssertionService\\assertion\\assertion.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IAssertion } from 'app/shared/model/AssertionService/assertion.model';\r\nimport { ErrorHandlerService } from 'app/shared/errorHandler/error-handler.service';\r\n\r\ntype EntityResponseType = HttpResponse<IAssertion>;\r\ntype EntityArrayResponseType = HttpResponse<IAssertion[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AssertionService {\r\n  public resourceUrl = SERVER_API_URL + 'services/assertionservice/api/assertion';\r\n\r\n  constructor(protected http: HttpClient, protected errorHandler: ErrorHandlerService) {}\r\n\r\n  create(assertion: IAssertion): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(assertion);\r\n    return this.http\r\n      .post<IAssertion>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  upload(assertion: IAssertion): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(assertion);\r\n    return this.http\r\n      .post<IAssertion>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  update(assertion: IAssertion): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(assertion);\r\n    return this.http\r\n      .put<IAssertion>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  find(id: string): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<IAssertion>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<IAssertion[]>(this.resourceUrl + 's', { params: options, observe: 'response' })\r\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: string): Observable<HttpResponse<any>> {\r\n    return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  deleteFromOrcid(id: string): Observable<HttpResponse<any>> {\r\n    return this.http.delete<any>(`${this.resourceUrl}/orcid/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  generatePermissionLinks(): Observable<HttpResponse<any>> {\r\n    return this.http.post<any>(`${this.resourceUrl}/permission-links`, { observe: 'response' });\r\n  }\r\n\r\n  generateCSV(): Observable<HttpResponse<any>> {\r\n    return this.http.post<any>(`${this.resourceUrl}/csv`, { observe: 'response' });\r\n  }\r\n\r\n  generateReport(): Observable<HttpResponse<any>> {\r\n    return this.http.post<any>(`${this.resourceUrl}/report`, { observe: 'response' });\r\n  }\r\n\r\n  protected convertDateFromClient(assertion: IAssertion): IAssertion {\r\n    const copy: IAssertion = Object.assign({}, assertion, {\r\n      created: assertion.created != null && assertion.created.isValid() ? assertion.created.toJSON() : null,\r\n      modified: assertion.modified != null && assertion.modified.isValid() ? assertion.modified.toJSON() : null,\r\n      deletedFromORCID:\r\n        assertion.deletedFromORCID != null && assertion.deletedFromORCID.isValid() ? assertion.deletedFromORCID.toJSON() : null\r\n    });\r\n    return copy;\r\n  }\r\n\r\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n    if (res.body) {\r\n      res.body.created = res.body.created != null ? moment(res.body.created) : null;\r\n      res.body.modified = res.body.modified != null ? moment(res.body.modified) : null;\r\n      res.body.addedToORCID = res.body.addedToORCID != null ? moment(res.body.addedToORCID) : null;\r\n      res.body.deletedFromORCID = res.body.deletedFromORCID != null ? moment(res.body.deletedFromORCID) : null;\r\n      res.body.updatedInORCID = res.body.updatedInORCID != null ? moment(res.body.updatedInORCID) : null;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n    if (res.body) {\r\n      res.body.forEach((assertion: IAssertion) => {\r\n        assertion.created = assertion.created != null ? moment(assertion.created) : null;\r\n        assertion.modified = assertion.modified != null ? moment(assertion.modified) : null;\r\n        assertion.deletedFromORCID = assertion.deletedFromORCID != null ? moment(assertion.deletedFromORCID) : null;\r\n        assertion.addedToORCID = assertion.addedToORCID != null ? moment(assertion.addedToORCID) : null;\r\n        assertion.updatedInORCID = assertion.updatedInORCID != null ? moment(assertion.updatedInORCID) : null;\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n}\r\n"]}]}
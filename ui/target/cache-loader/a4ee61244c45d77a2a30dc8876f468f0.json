{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\MSUserService\\ms-members\\ms-member.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\MSUserService\\ms-members\\ms-member.service.ts","mtime":1652191653752},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hOw0KY29uc3QgY29yZV8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29yZSIpOw0KY29uc3QgaHR0cF8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29tbW9uL2h0dHAiKTsNCmNvbnN0IG9wZXJhdG9yc18xID0gcmVxdWlyZSgicnhqcy9vcGVyYXRvcnMiKTsNCmNvbnN0IG1vbWVudCA9IHJlcXVpcmUoIm1vbWVudCIpOw0KY29uc3Qgb3BlcmF0b3JzXzIgPSByZXF1aXJlKCJyeGpzL29wZXJhdG9ycyIpOw0KY29uc3QgYXBwX2NvbnN0YW50c18xID0gcmVxdWlyZSgiYXBwL2FwcC5jb25zdGFudHMiKTsNCmNvbnN0IHNoYXJlZF8xID0gcmVxdWlyZSgiYXBwL3NoYXJlZCIpOw0KbGV0IE1TTWVtYmVyU2VydmljZSA9IGNsYXNzIE1TTWVtYmVyU2VydmljZSB7DQogICAgY29uc3RydWN0b3IoaHR0cCkgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgICAgICB0aGlzLnJlc291cmNlVXJsID0gYXBwX2NvbnN0YW50c18xLlNFUlZFUl9BUElfVVJMICsgJ3NlcnZpY2VzL21lbWJlcnNlcnZpY2UvYXBpL21lbWJlcnMnOw0KICAgICAgICB0aGlzLmFsbE1lbWJlcnMkID0gdGhpcy5nZXRBbGxNZW1iZXJzKCkucGlwZShvcGVyYXRvcnNfMS5zaGFyZSgpKTsNCiAgICAgICAgdGhpcy5vcmdOYW1lTWFwID0gbmV3IE9iamVjdCgpOw0KICAgIH0NCiAgICBjcmVhdGUobXNNZW1iZXIpIHsNCiAgICAgICAgY29uc3QgY29weSA9IHRoaXMuY29udmVydERhdGVGcm9tQ2xpZW50KG1zTWVtYmVyKTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cA0KICAgICAgICAgICAgLnBvc3QodGhpcy5yZXNvdXJjZVVybCwgY29weSwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pDQogICAgICAgICAgICAucGlwZShvcGVyYXRvcnNfMi5tYXAoKHJlcykgPT4gdGhpcy5jb252ZXJ0RGF0ZUZyb21TZXJ2ZXIocmVzKSkpOw0KICAgIH0NCiAgICB1cGRhdGUobXNNZW1iZXIpIHsNCiAgICAgICAgY29uc3QgY29weSA9IHRoaXMuY29udmVydERhdGVGcm9tQ2xpZW50KG1zTWVtYmVyKTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cA0KICAgICAgICAgICAgLnB1dCh0aGlzLnJlc291cmNlVXJsLCBjb3B5LCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgIC5waXBlKG9wZXJhdG9yc18yLm1hcCgocmVzKSA9PiB0aGlzLmNvbnZlcnREYXRlRnJvbVNlcnZlcihyZXMpKSk7DQogICAgfQ0KICAgIHZhbGlkYXRlKG1zTWVtYmVyKSB7DQogICAgICAgIGNvbnN0IGNvcHkgPSB0aGlzLmNvbnZlcnREYXRlRnJvbUNsaWVudChtc01lbWJlcik7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHANCiAgICAgICAgICAgIC5wb3N0KHRoaXMucmVzb3VyY2VVcmwgKyAnL3ZhbGlkYXRlJywgY29weSwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pDQogICAgICAgICAgICAucGlwZShvcGVyYXRvcnNfMi5tYXAoKHJlcykgPT4gdGhpcy5jb252ZXJ0RGF0ZUZyb21TZXJ2ZXIocmVzKSkpOw0KICAgIH0NCiAgICBmaW5kKGlkKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHANCiAgICAgICAgICAgIC5nZXQoYCR7dGhpcy5yZXNvdXJjZVVybH0vJHtpZH1gLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgIC5waXBlKG9wZXJhdG9yc18yLm1hcCgocmVzKSA9PiB0aGlzLmNvbnZlcnREYXRlRnJvbVNlcnZlcihyZXMpKSk7DQogICAgfQ0KICAgIHF1ZXJ5KHJlcSkgew0KICAgICAgICBjb25zdCBvcHRpb25zID0gc2hhcmVkXzEuY3JlYXRlUmVxdWVzdE9wdGlvbihyZXEpOw0KICAgICAgICByZXR1cm4gdGhpcy5odHRwDQogICAgICAgICAgICAuZ2V0KHRoaXMucmVzb3VyY2VVcmwsIHsgcGFyYW1zOiBvcHRpb25zLCBvYnNlcnZlOiAncmVzcG9uc2UnIH0pDQogICAgICAgICAgICAucGlwZShvcGVyYXRvcnNfMi5tYXAoKHJlcykgPT4gdGhpcy5jb252ZXJ0RGF0ZUFycmF5RnJvbVNlcnZlcihyZXMpKSk7DQogICAgfQ0KICAgIGdldEFsbE1lbWJlcnMoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHANCiAgICAgICAgICAgIC5nZXQoYCR7dGhpcy5yZXNvdXJjZVVybH0vbGlzdC9hbGxgLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgIC5waXBlKG9wZXJhdG9yc18yLm1hcCgocmVzKSA9PiB0aGlzLmNvbnZlcnREYXRlQXJyYXlGcm9tU2VydmVyKHJlcykpKTsNCiAgICB9DQogICAgZGVsZXRlKGlkKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlKGAke3RoaXMucmVzb3VyY2VVcmx9LyR7aWR9YCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBjb252ZXJ0RGF0ZUZyb21DbGllbnQobXNNZW1iZXIpIHsNCiAgICAgICAgY29uc3QgY29weSA9IE9iamVjdC5hc3NpZ24oe30sIG1zTWVtYmVyLCB7DQogICAgICAgICAgICBjcmVhdGVkRGF0ZTogbXNNZW1iZXIuY3JlYXRlZERhdGUgIT0gbnVsbCAmJiBtc01lbWJlci5jcmVhdGVkRGF0ZS5pc1ZhbGlkKCkgPyBtc01lbWJlci5jcmVhdGVkRGF0ZS50b0pTT04oKSA6IG51bGwsDQogICAgICAgICAgICBsYXN0TW9kaWZpZWREYXRlOiBtc01lbWJlci5sYXN0TW9kaWZpZWREYXRlICE9IG51bGwgJiYgbXNNZW1iZXIubGFzdE1vZGlmaWVkRGF0ZS5pc1ZhbGlkKCkgPyBtc01lbWJlci5sYXN0TW9kaWZpZWREYXRlLnRvSlNPTigpIDogbnVsbA0KICAgICAgICB9KTsNCiAgICAgICAgcmV0dXJuIGNvcHk7DQogICAgfQ0KICAgIGNvbnZlcnREYXRlRnJvbVNlcnZlcihyZXMpIHsNCiAgICAgICAgaWYgKHJlcy5ib2R5KSB7DQogICAgICAgICAgICByZXMuYm9keS5jcmVhdGVkRGF0ZSA9IHJlcy5ib2R5LmNyZWF0ZWREYXRlICE9IG51bGwgPyBtb21lbnQocmVzLmJvZHkuY3JlYXRlZERhdGUpIDogbnVsbDsNCiAgICAgICAgICAgIHJlcy5ib2R5Lmxhc3RNb2RpZmllZERhdGUgPSByZXMuYm9keS5sYXN0TW9kaWZpZWREYXRlICE9IG51bGwgPyBtb21lbnQocmVzLmJvZHkubGFzdE1vZGlmaWVkRGF0ZSkgOiBudWxsOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiByZXM7DQogICAgfQ0KICAgIGNvbnZlcnREYXRlQXJyYXlGcm9tU2VydmVyKHJlcykgew0KICAgICAgICBpZiAocmVzLmJvZHkpIHsNCiAgICAgICAgICAgIHJlcy5ib2R5LmZvckVhY2goKG1zTWVtYmVyKSA9PiB7DQogICAgICAgICAgICAgICAgbXNNZW1iZXIuY3JlYXRlZERhdGUgPSBtc01lbWJlci5jcmVhdGVkRGF0ZSAhPSBudWxsID8gbW9tZW50KG1zTWVtYmVyLmNyZWF0ZWREYXRlKSA6IG51bGw7DQogICAgICAgICAgICAgICAgbXNNZW1iZXIubGFzdE1vZGlmaWVkRGF0ZSA9IG1zTWVtYmVyLmxhc3RNb2RpZmllZERhdGUgIT0gbnVsbCA/IG1vbWVudChtc01lbWJlci5sYXN0TW9kaWZpZWREYXRlKSA6IG51bGw7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzOw0KICAgIH0NCn07DQpNU01lbWJlclNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWw0KICAgIGNvcmVfMS5JbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLA0KICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBodHRwXzEuSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgaHR0cF8xLkh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQ0KXSwgTVNNZW1iZXJTZXJ2aWNlKTsNCmV4cG9ydHMuTVNNZW1iZXJTZXJ2aWNlID0gTVNNZW1iZXJTZXJ2aWNlOw0K"},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\MSUserService\\ms-members\\ms-member.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\entities\\MSUserService\\ms-members\\ms-member.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subject, ReplaySubject } from 'rxjs';\r\nimport { share, shareReplay } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IMSMember } from 'app/shared/model/MSUserService/ms-member.model';\r\n\r\ntype EntityResponseType = HttpResponse<IMSMember>;\r\ntype EntityArrayResponseType = HttpResponse<IMSMember[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSMemberService {\r\n  public resourceUrl = SERVER_API_URL + 'services/memberservice/api/members';\r\n  public allMembers$: Observable<EntityArrayResponseType>;\r\n  public orgNameMap: any;\r\n\r\n  constructor(protected http: HttpClient) {\r\n    this.allMembers$ = this.getAllMembers().pipe(share());\r\n    this.orgNameMap = new Object();\r\n  }\r\n\r\n  create(msMember: IMSMember): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(msMember);\r\n    return this.http\r\n      .post<IMSMember>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  update(msMember: IMSMember): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(msMember);\r\n    return this.http\r\n      .put<IMSMember>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  validate(msMember: IMSMember): Observable<any> {\r\n    const copy = this.convertDateFromClient(msMember);\r\n    return this.http\r\n      .post<IMSMember>(this.resourceUrl + '/validate', copy, { observe: 'response' })\r\n      .pipe(map((res: any) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  find(id: string): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<IMSMember>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<IMSMember[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n  }\r\n\r\n  getAllMembers(): Observable<EntityArrayResponseType> {\r\n    return this.http\r\n      .get<IMSMember[]>(`${this.resourceUrl}/list/all`, { observe: 'response' })\r\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: string): Observable<HttpResponse<any>> {\r\n    return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  protected convertDateFromClient(msMember: IMSMember): IMSMember {\r\n    const copy: IMSMember = Object.assign({}, msMember, {\r\n      createdDate: msMember.createdDate != null && msMember.createdDate.isValid() ? msMember.createdDate.toJSON() : null,\r\n      lastModifiedDate: msMember.lastModifiedDate != null && msMember.lastModifiedDate.isValid() ? msMember.lastModifiedDate.toJSON() : null\r\n    });\r\n    return copy;\r\n  }\r\n\r\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n    if (res.body) {\r\n      res.body.createdDate = res.body.createdDate != null ? moment(res.body.createdDate) : null;\r\n      res.body.lastModifiedDate = res.body.lastModifiedDate != null ? moment(res.body.lastModifiedDate) : null;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n    if (res.body) {\r\n      res.body.forEach((msMember: IMSMember) => {\r\n        msMember.createdDate = msMember.createdDate != null ? moment(msMember.createdDate) : null;\r\n        msMember.lastModifiedDate = msMember.lastModifiedDate != null ? moment(msMember.lastModifiedDate) : null;\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n}\r\n"]}]}
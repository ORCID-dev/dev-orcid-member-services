{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\state-storage.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\state-storage.service.ts","mtime":1663837715855},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hOw0KY29uc3QgY29yZV8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29yZSIpOw0KY29uc3Qgbmd4X3dlYnN0b3JhZ2VfMSA9IHJlcXVpcmUoIm5neC13ZWJzdG9yYWdlIik7DQpsZXQgU3RhdGVTdG9yYWdlU2VydmljZSA9IGNsYXNzIFN0YXRlU3RvcmFnZVNlcnZpY2Ugew0KICAgIGNvbnN0cnVjdG9yKCRzZXNzaW9uU3RvcmFnZSkgew0KICAgICAgICB0aGlzLiRzZXNzaW9uU3RvcmFnZSA9ICRzZXNzaW9uU3RvcmFnZTsNCiAgICB9DQogICAgZ2V0UHJldmlvdXNTdGF0ZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuJHNlc3Npb25TdG9yYWdlLnJldHJpZXZlKCdwcmV2aW91c1N0YXRlJyk7DQogICAgfQ0KICAgIHJlc2V0UHJldmlvdXNTdGF0ZSgpIHsNCiAgICAgICAgdGhpcy4kc2Vzc2lvblN0b3JhZ2UuY2xlYXIoJ3ByZXZpb3VzU3RhdGUnKTsNCiAgICB9DQogICAgc3RvcmVQcmV2aW91c1N0YXRlKHByZXZpb3VzU3RhdGVOYW1lLCBwcmV2aW91c1N0YXRlUGFyYW1zKSB7DQogICAgICAgIGNvbnN0IHByZXZpb3VzU3RhdGUgPSB7IG5hbWU6IHByZXZpb3VzU3RhdGVOYW1lLCBwYXJhbXM6IHByZXZpb3VzU3RhdGVQYXJhbXMgfTsNCiAgICAgICAgdGhpcy4kc2Vzc2lvblN0b3JhZ2Uuc3RvcmUoJ3ByZXZpb3VzU3RhdGUnLCBwcmV2aW91c1N0YXRlKTsNCiAgICB9DQogICAgZ2V0RGVzdGluYXRpb25TdGF0ZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuJHNlc3Npb25TdG9yYWdlLnJldHJpZXZlKCdkZXN0aW5hdGlvblN0YXRlJyk7DQogICAgfQ0KICAgIHN0b3JlVXJsKHVybCkgew0KICAgICAgICB0aGlzLiRzZXNzaW9uU3RvcmFnZS5zdG9yZSgncHJldmlvdXNVcmwnLCB1cmwpOw0KICAgIH0NCiAgICBnZXRVcmwoKSB7DQogICAgICAgIHJldHVybiB0aGlzLiRzZXNzaW9uU3RvcmFnZS5yZXRyaWV2ZSgncHJldmlvdXNVcmwnKTsNCiAgICB9DQogICAgc3RvcmVEZXN0aW5hdGlvblN0YXRlKGRlc3RpbmF0aW9uU3RhdGUsIGRlc3RpbmF0aW9uU3RhdGVQYXJhbXMsIGZyb21TdGF0ZSkgew0KICAgICAgICBjb25zdCBkZXN0aW5hdGlvbkluZm8gPSB7DQogICAgICAgICAgICBkZXN0aW5hdGlvbjogew0KICAgICAgICAgICAgICAgIG5hbWU6IGRlc3RpbmF0aW9uU3RhdGUubmFtZSwNCiAgICAgICAgICAgICAgICBkYXRhOiBkZXN0aW5hdGlvblN0YXRlLmRhdGENCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBwYXJhbXM6IGRlc3RpbmF0aW9uU3RhdGVQYXJhbXMsDQogICAgICAgICAgICBmcm9tOiB7DQogICAgICAgICAgICAgICAgbmFtZTogZnJvbVN0YXRlLm5hbWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgfTsNCiAgICAgICAgdGhpcy4kc2Vzc2lvblN0b3JhZ2Uuc3RvcmUoJ2Rlc3RpbmF0aW9uU3RhdGUnLCBkZXN0aW5hdGlvbkluZm8pOw0KICAgIH0NCn07DQpTdGF0ZVN0b3JhZ2VTZXJ2aWNlID0gdHNsaWJfMS5fX2RlY29yYXRlKFsNCiAgICBjb3JlXzEuSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2Ygbmd4X3dlYnN0b3JhZ2VfMS5TZXNzaW9uU3RvcmFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIG5neF93ZWJzdG9yYWdlXzEuU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0XSkNCl0sIFN0YXRlU3RvcmFnZVNlcnZpY2UpOw0KZXhwb3J0cy5TdGF0ZVN0b3JhZ2VTZXJ2aWNlID0gU3RhdGVTdG9yYWdlU2VydmljZTsNCg=="},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\state-storage.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\core\\auth\\state-storage.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,mDAAuD;AAGvD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAC9B,YAAoB,eAAsC;QAAtC,oBAAe,GAAf,eAAe,CAAuB;IAAG,CAAC;IAE9D,gBAAgB;QACd,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC9C,CAAC;IAED,kBAAkB,CAAC,iBAAiB,EAAE,mBAAmB;QACvD,MAAM,aAAa,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC;QAC/E,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;IAC7D,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC3D,CAAC;IAED,QAAQ,CAAC,GAAW;QAClB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACtD,CAAC;IAED,qBAAqB,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,SAAS;QACvE,MAAM,eAAe,GAAG;YACtB,WAAW,EAAE;gBACX,IAAI,EAAE,gBAAgB,CAAC,IAAI;gBAC3B,IAAI,EAAE,gBAAgB,CAAC,IAAI;aAC5B;YACD,MAAM,EAAE,sBAAsB;YAC9B,IAAI,EAAE;gBACJ,IAAI,EAAE,SAAS,CAAC,IAAI;aACrB;SACF,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;IAClE,CAAC;CACF,CAAA;AAzCY,mBAAmB;IAD/B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEI,sCAAqB,oBAArB,sCAAqB;GAD/C,mBAAmB,CAyC/B;AAzCY,kDAAmB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StateStorageService {\r\n  constructor(private $sessionStorage: SessionStorageService) {}\r\n\r\n  getPreviousState() {\r\n    return this.$sessionStorage.retrieve('previousState');\r\n  }\r\n\r\n  resetPreviousState() {\r\n    this.$sessionStorage.clear('previousState');\r\n  }\r\n\r\n  storePreviousState(previousStateName, previousStateParams) {\r\n    const previousState = { name: previousStateName, params: previousStateParams };\r\n    this.$sessionStorage.store('previousState', previousState);\r\n  }\r\n\r\n  getDestinationState() {\r\n    return this.$sessionStorage.retrieve('destinationState');\r\n  }\r\n\r\n  storeUrl(url: string) {\r\n    this.$sessionStorage.store('previousUrl', url);\r\n  }\r\n\r\n  getUrl() {\r\n    return this.$sessionStorage.retrieve('previousUrl');\r\n  }\r\n\r\n  storeDestinationState(destinationState, destinationStateParams, fromState) {\r\n    const destinationInfo = {\r\n      destination: {\r\n        name: destinationState.name,\r\n        data: destinationState.data\r\n      },\r\n      params: destinationStateParams,\r\n      from: {\r\n        name: fromState.name\r\n      }\r\n    };\r\n    this.$sessionStorage.store('destinationState', destinationInfo);\r\n  }\r\n}\r\n"]}]}
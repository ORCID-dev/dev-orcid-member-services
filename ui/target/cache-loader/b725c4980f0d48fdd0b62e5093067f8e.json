{"remainingRequest":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","dependencies":[{"path":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","mtime":1663837716129},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular2-template-loader\\index.js","mtime":1663256168388},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663256170419},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1663256168812},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\ts-loader\\index.js","mtime":1663256162409},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js","mtime":1663256183091},{"path":"C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js","mtime":1663256174695}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOw0KdmFyIF9hOw0KY29uc3QgY29yZV8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29yZSIpOw0KY29uc3QgaHR0cF8xID0gcmVxdWlyZSgiQGFuZ3VsYXIvY29tbW9uL2h0dHAiKTsNCmNvbnN0IGFwcF9jb25zdGFudHNfMSA9IHJlcXVpcmUoImFwcC9hcHAuY29uc3RhbnRzIik7DQpjb25zdCBwcm9maWxlX2luZm9fbW9kZWxfMSA9IHJlcXVpcmUoIi4vcHJvZmlsZS1pbmZvLm1vZGVsIik7DQpjb25zdCBvcGVyYXRvcnNfMSA9IHJlcXVpcmUoInJ4anMvb3BlcmF0b3JzIik7DQpsZXQgUHJvZmlsZVNlcnZpY2UgPSBjbGFzcyBQcm9maWxlU2VydmljZSB7DQogICAgY29uc3RydWN0b3IoaHR0cCkgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgICAgICB0aGlzLmluZm9VcmwgPSBhcHBfY29uc3RhbnRzXzEuU0VSVkVSX0FQSV9VUkwgKyAnbWFuYWdlbWVudC9pbmZvJzsNCiAgICB9DQogICAgZ2V0UHJvZmlsZUluZm8oKSB7DQogICAgICAgIGlmICghdGhpcy5wcm9maWxlSW5mbykgew0KICAgICAgICAgICAgdGhpcy5wcm9maWxlSW5mbyA9IHRoaXMuaHR0cA0KICAgICAgICAgICAgICAgIC5nZXQodGhpcy5pbmZvVXJsLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSkNCiAgICAgICAgICAgICAgICAucGlwZShvcGVyYXRvcnNfMS5tYXAoKHJlcykgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuYm9keTsNCiAgICAgICAgICAgICAgICBjb25zdCBwaSA9IG5ldyBwcm9maWxlX2luZm9fbW9kZWxfMS5Qcm9maWxlSW5mbygpOw0KICAgICAgICAgICAgICAgIHBpLmFjdGl2ZVByb2ZpbGVzID0gZGF0YVsnYWN0aXZlUHJvZmlsZXMnXTsNCiAgICAgICAgICAgICAgICBjb25zdCBkaXNwbGF5UmliYm9uT25Qcm9maWxlcyA9IGRhdGFbJ2Rpc3BsYXktcmliYm9uLW9uLXByb2ZpbGVzJ10uc3BsaXQoJywnKTsNCiAgICAgICAgICAgICAgICBpZiAocGkuYWN0aXZlUHJvZmlsZXMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmliYm9uUHJvZmlsZXMgPSBkaXNwbGF5UmliYm9uT25Qcm9maWxlcy5maWx0ZXIocHJvZmlsZSA9PiBwaS5hY3RpdmVQcm9maWxlcy5pbmNsdWRlcyhwcm9maWxlKSk7DQogICAgICAgICAgICAgICAgICAgIGlmIChyaWJib25Qcm9maWxlcy5sZW5ndGggIT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHBpLnJpYmJvbkVudiA9IHJpYmJvblByb2ZpbGVzWzBdOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHBpLmluUHJvZHVjdGlvbiA9IHBpLmFjdGl2ZVByb2ZpbGVzLmluY2x1ZGVzKCdwcm9kJyk7DQogICAgICAgICAgICAgICAgICAgIHBpLnN3YWdnZXJFbmFibGVkID0gcGkuYWN0aXZlUHJvZmlsZXMuaW5jbHVkZXMoJ3N3YWdnZXInKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIHBpOw0KICAgICAgICAgICAgfSkpDQogICAgICAgICAgICAgICAgLnRvUHJvbWlzZSgpOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiB0aGlzLnByb2ZpbGVJbmZvOw0KICAgIH0NCn07DQpQcm9maWxlU2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgY29yZV8xLkluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksDQogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIGh0dHBfMS5IdHRwQ2xpZW50ICE9PSAidW5kZWZpbmVkIiAmJiBodHRwXzEuSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pDQpdLCBQcm9maWxlU2VydmljZSk7DQpleHBvcnRzLlByb2ZpbGVTZXJ2aWNlID0gUHJvZmlsZVNlcnZpY2U7DQo="},{"version":3,"file":"C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","sourceRoot":"","sources":["C:\\prgr\\orcid-member-services\\gateway\\node_modules\\angular-router-loader\\src\\index.js!C:\\prgr\\orcid-member-services\\gateway\\node_modules\\tslint-loader\\index.js!C:\\prgr\\orcid-member-services\\gateway\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAEhE,qDAAmD;AACnD,6DAAmD;AACnD,8CAAqC;AAGrC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAG,8BAAc,GAAG,iBAAiB,CAAC;IAGd,CAAC;IAExC,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI;iBACzB,GAAG,CAAc,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;iBACvD,IAAI,CACH,eAAG,CAAC,CAAC,GAA8B,EAAE,EAAE;gBACrC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,MAAM,EAAE,GAAG,IAAI,gCAAW,EAAE,CAAC;gBAC7B,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3C,MAAM,uBAAuB,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9E,IAAI,EAAE,CAAC,cAAc,EAAE;oBACrB,MAAM,cAAc,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBACtG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/B,EAAE,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;qBAClC;oBACD,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACrD,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;iBAC3D;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CACH;iBACA,SAAS,EAAE,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;CACF,CAAA;AA/BY,cAAc;IAD1B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAKP,iBAAU,oBAAV,iBAAU;GAJzB,cAAc,CA+B1B;AA/BY,wCAAc","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { ProfileInfo } from './profile-info.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProfileService {\r\n  private infoUrl = SERVER_API_URL + 'management/info';\r\n  private profileInfo: Promise<ProfileInfo>;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProfileInfo(): Promise<ProfileInfo> {\r\n    if (!this.profileInfo) {\r\n      this.profileInfo = this.http\r\n        .get<ProfileInfo>(this.infoUrl, { observe: 'response' })\r\n        .pipe(\r\n          map((res: HttpResponse<ProfileInfo>) => {\r\n            const data = res.body;\r\n            const pi = new ProfileInfo();\r\n            pi.activeProfiles = data['activeProfiles'];\r\n            const displayRibbonOnProfiles = data['display-ribbon-on-profiles'].split(',');\r\n            if (pi.activeProfiles) {\r\n              const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\r\n              if (ribbonProfiles.length !== 0) {\r\n                pi.ribbonEnv = ribbonProfiles[0];\r\n              }\r\n              pi.inProduction = pi.activeProfiles.includes('prod');\r\n              pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\r\n            }\r\n            return pi;\r\n          })\r\n        )\r\n        .toPromise();\r\n    }\r\n    return this.profileInfo;\r\n  }\r\n}\r\n"]}]}